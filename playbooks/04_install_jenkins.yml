# playbooks/03_install_jenkins.yml

- name: Instalar CRDs de Traefik y Jenkins con Helm
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../vars/main.yml
  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
    KUBECONFIG: "{{ kubeconfig_path }}"

  tasks:
    - name: ✅ Confirmar carga de variables
      debug:
        msg: "✅ Variables cargadas correctamente."

    # ──────────────── TRAEFIK CRDs ────────────────
    - name: ➕ Añadir repositorio de Helm para Traefik
      kubernetes.core.helm_repository:
        name: traefik
        repo_url: https://traefik.github.io/charts
        state: present

    - name: 🔍 Verificar si ya existen los CRDs de Traefik
      shell: kubectl get crd ingressroutes.traefik.io --ignore-not-found
      register: traefik_crd_check
      changed_when: false

    - name: 🧠 Instalar CRDs de Traefik 3 (solo si no existen)
      shell: |
        helm upgrade --install traefik-crds traefik/traefik-crds \
          --namespace kube-system \
          --create-namespace
      args:
        executable: /bin/bash
      when: traefik_crd_check.stdout == ""

    # ──────────────── JENKINS ────────────────
    - name: 📝 Renderizar values.yaml.j2 de Jenkins
      template:
        src: ../templates/jenkins/values.yaml.j2
        dest: ../templates/jenkins/values.yaml

    - name: 📦 Crear namespace Jenkins si no existe
      shell: |
        kubectl get namespace {{ jenkins_namespace }} || \
        kubectl create namespace {{ jenkins_namespace }}
      args:
        executable: /bin/bash

    - name: ➕ Añadir repositorio de Helm para Jenkins
      kubernetes.core.helm_repository:
        name: jenkins
        repo_url: https://charts.jenkins.io
        state: present

    - name: 🚀 Instalar o actualizar Jenkins con Helm
      shell: |
        helm upgrade --install {{ jenkins_release_name }} jenkins/jenkins \
          --namespace {{ helm_namespace }} \
          --create-namespace=false \
          --values ../templates/jenkins/values.yaml \
          --version {{ jenkins_chart_version }}
      args:
        executable: /bin/bash

    - name: ⏱️ Esperar a que Jenkins esté en estado Running
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: "{{ helm_namespace }}"
        name: "{{ jenkins_release_name }}-0"
      register: jenkins_pod_info
      until: jenkins_pod_info.resources[0].status.phase == "Running"
      retries: 10
      delay: 15
