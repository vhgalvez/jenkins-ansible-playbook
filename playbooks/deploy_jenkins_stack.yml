# playbooks\deploy_jenkins_stack.yml
---
- name: 📦 0 Copiar Secret TLS (wildcard-socialdevs-tls)
  import_playbook: 00_copy_tls_secret.yml

- name: 🔐 Generar y aplicar SealedSecret de autenticación para Jenkins
  import_playbook: 01_generate-auth-secret.yml

- name: 🧩 Renderizar y aplicar Middleware + IngressRoute para Jenkins
  import_playbook: 02_render_and_apply_jenkins_ingress.yml

- name: 📦 Instalar Jenkins con Helm
  import_playbook: 03_install_jenkins.yml

###########################################################################
# ✅ Verificación final: Credenciales, estado del Pod y acceso HTTPS
###########################################################################
- hosts: localhost
  gather_facts: false
  vars_files:
    - ../vars/main.yml

  tasks:
    #####################################################################
    # 1. Validar que las credenciales estén presentes
    #####################################################################
    - name: ✅ Validar credenciales de autenticación para Jenkins
      assert:
        that:
          - jenkins_auth_user is defined
          - jenkins_auth_pass is defined
        msg: "❌ Credenciales de autenticación no definidas."

    #####################################################################
    # 2. Esperar a que el Pod de Jenkins esté listo (condición Ready)
    #####################################################################
    - name: ⏳ Esperar a que el Pod de Jenkins esté listo
      shell: >
        kubectl -n jenkins wait pod
        -l app.kubernetes.io/component=jenkins-controller
        --for=condition=Ready
        --timeout=300s
      changed_when: false

    #####################################################################
    # 3. Verificar acceso al Dashboard de Jenkins (HTTPS + BasicAuth)
    #####################################################################
    - name: 🌐 Verificar acceso al Dashboard de Jenkins por HTTPS
      shell: >
        curl --http1.1 -k
        -u {{ jenkins_auth_user }}:{{ jenkins_auth_pass }}
        https://{{ jenkins_dashboard_domain }}/
        --max-time 20
        --silent
        --output /dev/null
        --write-out '%{http_code}'
      register: dashboard_status
      retries: 25
      delay: 8
      until: dashboard_status.stdout in ['200', '302', '307', '401', '403']
      changed_when: false
      failed_when: dashboard_status.stdout not in ['200', '302', '307', '401', '403']