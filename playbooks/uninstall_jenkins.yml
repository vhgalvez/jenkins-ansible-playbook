# playbooks/uninstall_jenkins.yml
---
# 🧹 Desinstalar Jenkins y recursos asociados (Helm, PVC, Secrets, JCasC, etc.)
- name: Desinstalar Jenkins y recursos relacionados
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../vars/main.yml

  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
    PATH: "/usr/local/bin:/usr/bin:/bin"

  tasks:
    - name: 🔍 Verificar que Helm está disponible
      command: which helm
      changed_when: false

    - name: 🔍 Verificar que kubectl está disponible
      command: which {{ kubectl_path | basename }}
      changed_when: false

    #####################################################################
    # 1. Desinstalar release Helm (Jenkins)
    #####################################################################
    - name: 🚮 Desinstalar release '{{ jenkins_release_name }}'
      shell: |
        helm list -n {{ helm_namespace }} | grep -q '^{{ jenkins_release_name }}\b' \
          && helm uninstall {{ jenkins_release_name }} -n {{ helm_namespace }} \
          || echo "❕ Release no existe"
      register: helm_uninstall
      changed_when: "'uninstall' in helm_uninstall.stdout"

    - debug:
        msg: "{{ helm_uninstall.stdout | default(helm_uninstall.stderr) }}"

    #####################################################################
    # 2. Eliminar recursos residuales (PVC, Ingress, Middleware, Secrets)
    #####################################################################
    - name: 🗑️ Eliminar PVCs, SealedSecrets, IngressRoute, Middleware, Secret TLS
      shell: |
        {{ kubectl_path }} -n {{ helm_namespace }} delete pvc \
          -l app.kubernetes.io/instance={{ jenkins_release_name }} --ignore-not-found
        {{ kubectl_path }} -n {{ helm_namespace }} delete ingressroute \
          -l app.kubernetes.io/instance={{ jenkins_release_name }} --ignore-not-found
        {{ kubectl_path }} -n {{ helm_namespace }} delete middleware {{ jenkins_middleware_name }} --ignore-not-found
        {{ kubectl_path }} -n {{ helm_namespace }} delete secret {{ tls_secret_name }} --ignore-not-found

        # SealedSecrets específicos
        {{ kubectl_path }} -n {{ helm_namespace }} delete sealedsecret jenkins-admin --ignore-not-found
        {{ kubectl_path }} -n {{ helm_namespace }} delete sealedsecret jenkins-dashboard-auth-secret --ignore-not-found
      register: extra_resources
      changed_when: "'deleted' in extra_resources.stdout"

    - debug:
        msg: "{{ extra_resources.stdout }}"

    #####################################################################
    # 3. Eliminar todos los Secrets explícitos usados por Jenkins
    #####################################################################
    - name: 🗑️ Eliminar secrets relacionados con Jenkins
      shell: |
        for s in \
          jenkins \
          jenkins-admin \
          jenkins-dashboard-auth-secret \
          github-ci-token \
          dockerhub-config \
          dockerhub-credentials ; do
          {{ kubectl_path }} -n {{ helm_namespace }} delete secret "$s" --ignore-not-found
        done
      register: delete_secrets
      changed_when: "'deleted' in delete_secrets.stdout"

    - debug:
        msg: "{{ delete_secrets.stdout }}"

    #####################################################################
    # 4. Eliminar namespace si está vacío
    #####################################################################
    - name: 🧼 Eliminar namespace '{{ helm_namespace }}' si está vacío
      shell: |
        {{ kubectl_path }} get ns {{ helm_namespace }} &>/dev/null \
          && {{ kubectl_path }} delete ns {{ helm_namespace }} \
          || echo "❕ Namespace no existe"
      register: ns_delete
      changed_when: "'deleted' in ns_delete.stdout"

    - debug:
        msg: "{{ ns_delete.stdout }}"

    #####################################################################
    # 5. Confirmación
    #####################################################################
    - name: ✅ Confirmar eliminación total
      shell: "{{ kubectl_path }} get ns {{ helm_namespace }} 2>/dev/null || true"
      register: ns_check
      changed_when: false

    - debug:
        msg: "✅ Jenkins y el namespace '{{ helm_namespace }}' fueron eliminados completamente."
      when: ns_check.stdout == ""

    #####################################################################
    # 6. Eliminar archivos locales generados por los playbooks
    #####################################################################
    - name: 🧹 Eliminar archivos locales generados (Middleware, IngressRoute, SealedSecrets)
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ playbook_dir }}/files/jenkins-dashboard-middleware.yaml"
        - "{{ playbook_dir }}/files/jenkins-dashboard-ingressroute.yaml"
        - "{{ playbook_dir }}/files/jenkins-admin-sealed.yaml"
        - "{{ playbook_dir }}/files/jenkins-dashboard-sealed.yaml"
      when: inventory_hostname == "localhost"

    - name: 🧼 Eliminar carpeta 'files' si está vacía
      find:
        paths: "{{ playbook_dir }}/files"
        file_type: any
      register: files_content

    - name: 🗑️ Borrar carpeta si está vacía
      file:
        path: "{{ playbook_dir }}/files"
        state: absent
      when: files_content.matched == 0