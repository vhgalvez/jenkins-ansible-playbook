# playbooks/uninstall_jenkins.yml
---
# üßπ Desinstalar Jenkins de Kubernetes usando Ansible (solo lo creado por Helm)

- name: üöÄ Desinstalar Jenkins de Kubernetes
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../vars/main.yml

  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
    KUBECONFIG: "/home/victory/.kube/config"

  tasks:
    - name: üîç Verificar que helm est√° disponible
      command: which helm
      register: helm_check
      failed_when: helm_check.rc != 0
      changed_when: false

    - name: üîç Verificar que kubectl est√° disponible
      command: which kubectl
      register: kubectl_check
      failed_when: kubectl_check.rc != 0
      changed_when: false

    - name: üì¶ Desinstalar release '{{ jenkins_release_name }}' en namespace '{{ helm_namespace }}'
      shell: |
        helm list -n {{ helm_namespace }} | grep -q "^{{ jenkins_release_name }}\b" \
        && helm uninstall {{ jenkins_release_name }} -n {{ helm_namespace }} \
        || echo "Release no existe"
      register: helm_uninstall
      changed_when: "'uninstall' in helm_uninstall.stdout"
      failed_when: false

    - name: üìÑ Resultado de Helm uninstall
      debug:
        msg: "{{ helm_uninstall.stdout | default(helm_uninstall.stderr) }}"

    - name: üß® Eliminar recursos personalizados creados por Jenkins (PVC, SealedSecrets, IngressRoutes)
      shell: |
        kubectl delete pvc -l app.kubernetes.io/instance={{ jenkins_release_name }} -n {{ helm_namespace }} || true
        kubectl delete sealedsecret -l app.kubernetes.io/instance={{ jenkins_release_name }} -n {{ helm_namespace }} || true
        kubectl delete ingressroute -l app.kubernetes.io/instance={{ jenkins_release_name }} -n {{ helm_namespace }} || true
      register: extra_resources
      changed_when: "'deleted' in extra_resources.stdout"
      failed_when: false

    - name: üìÑ Resultado de eliminaci√≥n de recursos adicionales
      debug:
        msg: "{{ extra_resources.stdout }}"

    - name: üóë Eliminar namespace '{{ helm_namespace }}' si qued√≥ vac√≠o
      shell: |
        kubectl get ns {{ helm_namespace }} &>/dev/null \
        && kubectl delete ns {{ helm_namespace }} || echo "Namespace no existe"
      register: ns_delete
      changed_when: "'deleted' in ns_delete.stdout"
      failed_when: false

    - name: üìÑ Resultado de eliminaci√≥n del namespace
      debug:
        msg: "{{ ns_delete.stdout }}"

    - name: üîç Verificar si el namespace fue eliminado
      shell: kubectl get ns {{ helm_namespace }} 2>/dev/null || echo ""
      register: ns_check
      changed_when: false

    - name: ‚úÖ Confirmaci√≥n de eliminaci√≥n completa
      debug:
        msg: "‚úÖ Jenkins y el namespace '{{ helm_namespace }}' fueron eliminados completamente."
      when: ns_check.stdout == ""

    - name: ‚ö†Ô∏è El namespace '{{ helm_namespace }}' a√∫n existe
      debug:
        msg: "‚ö†Ô∏è Revisa recursos colgantes o falta de permisos para eliminar el namespace '{{ helm_namespace }}'."
      when: ns_check.stdout != ""
