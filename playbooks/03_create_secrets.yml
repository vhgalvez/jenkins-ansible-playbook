---
# playbooks/03_create_secrets.yml
# 🔐 Secretos necesarios para Jenkins + Kaniko en PRODUCCIÓN
# ─────────────────────────────────────────────────────────────

- hosts: localhost
  gather_facts: false
  vars_files:
    - ../vars/main.yml  # ← dockerhub_username, dockerhub_token, github_token, jenkins_namespace
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
    PATH: "/usr/local/bin:/usr/bin:/bin"

  tasks:

    # ▸ 0. Cargar .env si se desea usar desde archivo externo
    - name: 📥 Cargar .env manualmente (opcional, si no defines en vars.yml)
      shell: |
        set -a
        source "{{ playbook_dir }}/../.env"
        set +a
      register: dotenv_result
      changed_when: false
      failed_when: false  # ← toleramos si no existe

    # ▸ 0.1 Validar variables críticas
    - name: ✅ Validar que las variables estén definidas
      assert:
        that:
          - dockerhub_username is defined
          - dockerhub_token is defined
          - github_token is defined
        fail_msg: "❌ Faltan variables críticas para crear secretos de Jenkins/Kaniko."
        success_msg: "✅ Variables necesarias presentes."

    # ▸ 1. dockerhub-credentials (para plugins en Jenkins)
    - name: 🔐 Crear secreto dockerhub-credentials (Jenkins plugins)
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: dockerhub-credentials
            namespace: "{{ jenkins_namespace }}"
          type: kubernetes.io/basic-auth
          stringData:
            username: "{{ dockerhub_username }}"
            password: "{{ dockerhub_token }}"

    # ▸ 2. github-ci-token (para acceso a GitHub desde Jenkins)
    - name: 🔐 Crear secreto github-ci-token (GitHub token para CI/CD)
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: github-ci-token
            namespace: "{{ jenkins_namespace }}"
          type: Opaque
          stringData:
            token: "{{ github_token }}"

    # ▸ 3. dockerhub-config (Kaniko → /kaniko/.docker/config.json)
    - name: 🔐 Crear secreto dockerhub-config (auth.json para Kaniko)
      vars:
        docker_auth_b64: "{{ (dockerhub_username + ':' + dockerhub_token) | b64encode }}"
        docker_cfg_json: |
          {
            "auths": {
              "https://index.docker.io/v1/": {
                "auth": "{{ docker_auth_b64 }}"
              }
            }
          }
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: dockerhub-config
            namespace: "{{ jenkins_namespace }}"
          type: Opaque
          stringData:
            config.json: "{{ docker_cfg_json }}"