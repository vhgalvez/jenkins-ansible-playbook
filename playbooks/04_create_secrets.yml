# playbooks/04_create_secrets.yml
---
# 🔐 Crea / actualiza los Secrets necesarios para Jenkins y Kaniko en PRODUCCIÓN
- hosts: localhost
  gather_facts: false
  vars_files:
    - ../vars/main.yml            # Ruta a dockerhub_username / dockerhub_token / github_token
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
    PATH: "/usr/local/bin:/usr/bin:/bin"

  tasks:
    ####################################################################
    # 0) Cargar .env (si existe) para inyectar variables al runtime
    ####################################################################
    - name: 📥 Importar .env (opcional)
      shell: |
        if [ -f "{{ playbook_dir }}/../.env" ]; then
          set -a && . "{{ playbook_dir }}/../.env" && set +a
        fi
      changed_when: false
      failed_when: false

    ####################################################################
    # 0.1) Validación de variables imprescindibles
    ####################################################################
    - name: ✅ Validar variables críticas
      assert:
        that:
          - dockerhub_username | length > 0
          - dockerhub_token    | length > 0
          - github_token       | length > 0
        fail_msg:  "❌ Faltan variables dockerhub_* o github_token."
        success_msg: "✅ Variables críticas presentes."

    ####################################################################
    # 1) dockerhub-credentials (se monta vía envFrom)
    ####################################################################
    - name: 🔐 dockerhub-credentials
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: dockerhub-credentials
            namespace: "{{ jenkins_namespace }}"
          type: kubernetes.io/basic-auth       # Requiere username / password
          stringData:
            # Claves estándar (compatibilidad genérica)
            username: "{{ dockerhub_username }}"
            password: "{{ dockerhub_token }}"
            # Claves MAYÚSCULAS que JCasC consumirá
            DOCKERHUB_USERNAME: "{{ dockerhub_username }}"
            DOCKERHUB_TOKEN:    "{{ dockerhub_token }}"

    ####################################################################
    # 2) github-ci-token (se monta vía envFrom)
    ####################################################################
    - name: 🔐 github-ci-token
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: github-ci-token
            namespace: "{{ jenkins_namespace }}"
          type: Opaque
          stringData:
            GITHUB_TOKEN: "{{ github_token }}"

    ####################################################################
    # 3) dockerhub-config (Kaniko leerá /kaniko/.docker/config.json)
    ####################################################################
    - name: 🔐 dockerhub-config (Kaniko)
      vars:
        docker_auth_b64: "{{ (dockerhub_username ~ ':' ~ dockerhub_token) | b64encode }}"
        docker_cfg: >-
          {
            "auths": {
              "https://index.docker.io/v1/": {
                "auth": "{{ docker_auth_b64 }}"
              }
            }
          }
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: dockerhub-config
            namespace: "{{ jenkins_namespace }}"
          type: Opaque
          stringData:
            config.json: "{{ docker_cfg | to_json }}"