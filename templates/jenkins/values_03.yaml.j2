# templates\jenkins\values.yaml.j2
###############################################################################
# Jenkins Helm values - Producci√≥n
###############################################################################

controller:
  image:
    repository: jenkins/jenkins
    tag: "2.518-jdk21"         # LTS julio -2025
    pullPolicy: IfNotPresent

  installWizard: false         # desactiva el asistente
  overwritePlugins: false

  ###########################################################################
  # 1) Plugins pre-instalados
  ###########################################################################
  installPlugins:
    - kubernetes
    - workflow-aggregator
    - git
    - job-dsl
    - matrix-auth
    - credentials
    - plain-credentials
    - credentials-binding
    - github
    - github-branch-source
    - docker-workflow
    - blueocean
    - configuration-as-code
    - sse-gateway
    - pipeline-stage-view

  ###########################################################################
  # 2) Init / Sidecars
  ###########################################################################
  sidecars:
    initContainer:
      enabled: true
    configAutoReload:
      enabled: true

  initContainerEnv:
    - { name: JENKINS_UC,                value: https://updates.jenkins.io }
    - { name: JENKINS_UC_DOWNLOAD,       value: https://updates.jenkins.io/download }
    - { name: JENKINS_UC_EXPERIMENTAL,   value: https://updates.jenkins.io/experimental }
    - { name: JENKINS_INCREMENTALS_REPO_MIRROR, value: https://repo.jenkins-ci.org/incrementals }

  ###########################################################################
  # 3)¬†Credenciales de administrador (no se usan porque JCasC crea el usuario)
  ###########################################################################
  admin:
    existingSecret: jenkins-admin
    userKey:  jenkins-admin-user
    passwordKey: jenkins-admin-password      # ‚Üê texto plano

  ###########################################################################
  # 4) Variables de entorno
  ###########################################################################
  env: []

  # ‚ñ∂ envFrom para DockerHub‚ÄØ/‚ÄØGitHub
  envFrom:
    - secretRef: { name: dockerhub-credentials }
    - secretRef: { name: github-ci-token }

  # ‚ñ∂ containerEnv para exponer las credenciales UI a JCasC
  containerEnv:
    - name: JENKINS_UI_USER
      valueFrom:
        secretKeyRef:
          name: jenkins-admin
          key: JENKINS_UI_USER
    - name: JENKINS_UI_PASS
      valueFrom:
        secretKeyRef:
          name: jenkins-admin
          key: JENKINS_UI_PASS

  ###########################################################################
  # 5) Jenkins Configuration-as-Code (JCasC)
  ###########################################################################
  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      00-security: |
        jenkins:
          systemMessage: "üöÄ Jenkins en producci√≥n"
          securityRealm:
            local:
              allowsSignup: false
              enableCaptcha: false
              users:
                - id: "${JENKINS_UI_USER}"
                  password: "${JENKINS_UI_PASS}"
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false

          clouds:
            - kubernetes:
                name: kubernetes
                serverUrl: https://kubernetes.default
                skipTlsVerify: true
                namespace: jenkins
{% raw %}
                jenkinsUrl: "http://{{ .Release.Name }}:8080"
                jenkinsTunnel: "{{ .Release.Name }}-agent:50000"
{% endraw %}
                templates:
                  - name: default
                    label: default
                    containers:
                      - { name: nodejs, image: node:18-alpine, command: cat, ttyEnabled: true }
                      - name: kaniko
                        image: gcr.io/kaniko-project/executor:v1.23.0-debug
                        command: /busybox/cat
                        ttyEnabled: true
                        envVars:
                          - envVar: { key: DOCKER_CONFIG, value: /kaniko/.docker }
                    volumes:
                      - secretVolume:
                          secretName: dockerhub-config
                          mountPath: /kaniko/.docker

        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      id: dockerhub-credentials
                      description: "üîê DockerHub CI/CD"
                      username: "${DOCKERHUB_USERNAME}"
                      password: "${DOCKERHUB_TOKEN}"
                  - string:
                      id: github-ci-token
                      description: "üîê GitHub Token CI"
                      secret: "${GITHUB_TOKEN}"

  ###########################################################################
  # 6) Recursos
  ###########################################################################
  resources:
    requests: { cpu: 200m, memory: 512Mi }
    limits:   { cpu: "2",  memory: 4Gi }

###############################################################################
# 7) Persistencia (Longhorn)
###############################################################################
persistence:
  enabled: true
  storageClass: "{{ jenkins_storage_class }}"
  size: 8Gi
  annotations:
    "longhorn.io/replica-count": "1"