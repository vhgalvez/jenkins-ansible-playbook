# templates\jenkins\values.yaml.j2
controller:
  serviceType: ClusterIP
  servicePort: 8080
  targetPort: 8080

  ingress:
    enabled: true
    ingressClassName: traefik
    hostName: "{{ jenkins_dashboard_domain }}"
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/auth-type: basic
      traefik.ingress.kubernetes.io/auth-secret: "{{ jenkins_secret_name }}"
{% if http_to_https_redirect | default(false) %}
      traefik.ingress.kubernetes.io/router.middlewares: default-redirectscheme@kubernetescrd
{% endif %}
    paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jenkins
            port:
              number: 8080

  # evita el asistente y espera plugins antes de JCasC
  initContainerEnv:
    - name: JAVA_OPTS
      value: "-Djenkins.install.runSetupWizard=false"

  sidecars:
    configAutoReload: { enabled: false }

  initContainers:
    - name: plugin-init
      image: jenkins/jenkins:2.504.3-jdk21
      command:
        - bash
        - -c
        - |
          until [ -f /var/jenkins_home/plugins/configuration-as-code.jpi ]; do sleep 1; done
      volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home

  JCasC:
    enabled: true
    configScripts:
      security: |
        jenkins:
          securityRealm:
            local:
              allowsSignup: false
              users:
                - id: {{ jenkins_auth_user_ui }}
                  password: {{ jenkins_auth_pass_ui }}
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false

  installPlugins:
    - kubernetes:4358.vcfd9c5a_0a_f51
    - kubernetes-client-api:6.15.0-550.v2229d7b_220d1
    - workflow-aggregator:608.v67378e9d3db_1
    - configuration-as-code:1971.vf9280461ea_89
    - git:5.7.0
    - credentials:1311.vcf0a_474e4f29
    - matrix-auth:3.3
  overwritePlugins: true

  resources:
    requests: { cpu: 200m, memory: 512Mi }
    limits:   { cpu: "2",  memory: 4Gi }

# Descomenta si no usarás agentes Kubernetes
# agent: { enabled: false }