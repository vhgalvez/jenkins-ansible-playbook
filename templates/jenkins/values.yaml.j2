# templates/jenkins/values.yaml.j2
controller:
  serviceType: ClusterIP
  servicePort: 8081  # Cambiado a 8081 para evitar conflicto con Traefik
  jenkinsOpts: "--httpPort=8081"  # Jenkins escuchará en el puerto 8081

  ingress:
    enabled: true
    ingressClassName: traefik
    hostName: "jenkins.cefaslocalserver.com"  # Usa el mismo nombre de host aquí
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web  # Solo HTTP, sin puerto 8080
      traefik.ingress.kubernetes.io/router.tls: "false"  # Deshabilitar TLS temporalmente para pruebas
      traefik.ingress.kubernetes.io/auth-type: basic  # Autenticación básica
      traefik.ingress.kubernetes.io/auth-secret: jenkins-auth-secret  # Secreto para autenticación básica
    paths:
      - path: /
        pathType: Prefix  # ✅ Permite subrutas como /login, /static, etc.
        backend:
          service:
            name: jenkins
            port:
              number: 8081  # Cambiar a 8081 para que Jenkins escuche en este puerto
    tls:
      - hosts:
          - "jenkins.cefaslocalserver.com"  # Ajustar para coincidir con tu hostname
        certResolver: default  # Usar el resolver ACME de Traefik para TLS (deshabilitado en esta configuración de prueba)

  healthProbes:
    livenessProbe:
      httpGet:
        path: /login
        port: 8081  # Cambiar a 8081 para verificar en el nuevo puerto
      initialDelaySeconds: 60  # Espera 60 segundos antes de empezar a verificar
      periodSeconds: 10  # Verifica cada 10 segundos
      failureThreshold: 3  # Si falla 3 veces, marca el pod como no saludable
    readinessProbe:
      httpGet:
        path: /login
        port: 8081  # Cambiar a 8081 para verificar en el nuevo puerto
      initialDelaySeconds: 60  # Espera 60 segundos antes de empezar a verificar
      periodSeconds: 10  # Verifica cada 10 segundos
      failureThreshold: 3  # Si falla 3 veces, marca el pod como no listo
    startupProbe:
      httpGet:
        path: /login
        port: 8081  # Cambiar a 8081 para verificar en el nuevo puerto
      failureThreshold: 30  # Si falla 30 veces, marcar como no saludable
      periodSeconds: 10  # Verifica cada 10 segundos
      initialDelaySeconds: 60  # Espera 60 segundos antes de la primera comprobación

  JCasC:
    enabled: false  # Desactivado si no usas configuración en código de Jenkins

  installPlugins: []  # Puedes agregar plugins de Jenkins aquí si es necesario

# Si quieres cambiar otros valores del puerto para evitar conflictos adicionales, puedes agregar o modificar las secciones siguientes:

# Para el servicio que se expone internamente dentro de Kubernetes:
service:
  annotations: {}
  labels: {}
  externalIPs: []
  internal: true  # Configurado como true para accesibilidad dentro del cluster
  externalTrafficPolicy: Cluster
  loadBalancerIP: ""
  type: ClusterIP  # Mantén esto como ClusterIP si no necesitas exposición externa directa

# Aquí también puedes añadir configuraciones adicionales, como la persistencia de datos (volúmenes) si es necesario:
persistence:
  enabled: true
  size: 10Gi
  accessMode: ReadWriteOnce
  storageClass: "standard"  # Cambia esto según la configuración de tu clúster de Kubernetes
