# templates\jenkins\values.yaml.j2
###############################################################################
# Jenkins Helm values (producci√≥n con conexi√≥n a Internet)
# Chart oficial (‚â• 5.x) ‚úî PVC Longhorn ‚úî CasC ‚úî Tokens externos ‚úî
###############################################################################

controller:
  image:
    repository: jenkins/jenkins
    tag: "2.518-jdk21"  # √öltima LTS a 2025‚Äë07
    pullPolicy: IfNotPresent

  installWizard: false
  overwritePlugins: false  # el chart ya gestiona dependencias

  ###########################################################################
  # 1) Plugins a instalar con el initContainer ¬´jenkins-plugin-cli¬ª
  ###########################################################################
  installPlugins:
    # ‚Äî Core / Pipelines ‚Äî
    - kubernetes
    - workflow-aggregator
    - git
    - job-dsl

    # ‚Äî Seguridad & Autenticaci√≥n ‚Äî
    - matrix-auth
    - credentials
    - plain-credentials
    - credentials-binding

    # ‚Äî GitHub ‚Äî
    - github                    # ‚Üê CORREGIDO (antes ¬´gthub¬ª)
    - github-branch-source

    # ‚Äî Docker & helpers ‚Äî
    - docker-workflow

    # ‚Äî Blue Ocean UI ‚Äî
    - blueocean

    # ‚Äî Configuration-as-Code & soporte SSE ‚Äî
    - configuration-as-code
    - sse-gateway              # ‚Üê NECESARIO para CasC + auto‚Äëreload
    - pipeline-stage-view

  ###########################################################################
  # 2) InitContainers y Sidecars
  ###########################################################################
  sidecars:
    initContainer:
      enabled: true  # usa la imagen oficial ¬´jenkins-plugin-cli¬ª
    configAutoReload:
      enabled: true

  ###########################################################################
  # 3) Credenciales de administrador (Secret externo)
  ###########################################################################
  admin:
    existingSecret: jenkins-admin
    userKey: jenkins-admin-user
    passwordKey: jenkins-admin-password  # formato: #jbcrypt:...

  # Bloqueamos otras fuentes de credenciales accidentales
  env: []

  # Exporta autom√°ticamente las variables del Secret ¬´dockerhub-credentials¬ª
  envFrom:
    - secretRef:
        name: dockerhub-credentials

  ###########################################################################
  # 4) Variables accesibles para los agentes (Kaniko, etc.)
  ###########################################################################
  containerEnv:
    - name: DOCKERHUB_USERNAME
      value: "${DOCKERHUB_USERNAME:-missing}"
    - name: DOCKERHUB_TOKEN
      value: "${DOCKERHUB_TOKEN:-missing}"
    - name: GITHUB_TOKEN
      value: "${GITHUB_TOKEN:-missing}"

  ###########################################################################
  # 5) Jenkins Configuration‚Äëas‚ÄëCode (JCasC)
  ###########################################################################
  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      main: |
        jenkins:
          systemMessage: "üöÄ Jenkins en producci√≥n"
          securityRealm:
            local:
              allowsSignup: false
              users:
                - id: "${JENKINS_ADMIN_ID:-admin}"
                  password: "${JENKINS_ADMIN_PASSWORD:-admin}"
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false
          clouds:
            - kubernetes:
                name: kubernetes
                serverUrl: https://kubernetes.default
                skipTlsVerify: true
                namespace: jenkins
{% raw %}
                jenkinsUrl: "http://{{ .Release.Name }}:8080"
                jenkinsTunnel: "{{ .Release.Name }}-agent:50000"
{% endraw %}
                templates:
                  - name: default
                    label: default
                    containers:
                      - name: nodejs
                        image: node:18-alpine
                        command: cat
                        ttyEnabled: true
                      - name: kaniko
                        image: gcr.io/kaniko-project/executor:v1.23.0-debug
                        command: /busybox/cat
                        ttyEnabled: true
                        envVars:
                          - envVar:
                              key: DOCKER_CONFIG
                              value: /kaniko/.docker
                    volumes:
                      - secretVolume:
                          secretName: dockerhub-config
                          mountPath: /kaniko/.docker
        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      id: dockerhub-credentials
                      description: "üîê DockerHub CI/CD"
                      username: "${DOCKERHUB_USERNAME:-missing}"
                      password: "${DOCKERHUB_TOKEN:-missing}"
                  - string:
                      id: github-ci-token
                      description: "üîê GitHub Token CI"
                      secret: "${GITHUB_TOKEN:-missing}"

  ###########################################################################
  # 6) Recursos del contenedor principal
  ###########################################################################
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: "2"
      memory: 4Gi

###############################################################################
# Persistencia con Longhorn (PVC)
###############################################################################

persistence:
  enabled: true
  storageClass: "{{ jenkins_storage_class }}"
  size: 8Gi
  annotations:
    longhorn.io/replica-count: "1"