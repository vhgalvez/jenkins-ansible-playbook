# templates\jenkins\values.yaml.j2
# ─────────────────────────────────────────────────────────────
# Jenkins Helm values — ENTORNO PRODUCCIÓN
# ─────────────────────────────────────────────────────────────
controller:
  image:
    repository: jenkins/jenkins
    tag: "2.518-jdk21"
    pullPolicy: IfNotPresent

  installWizard: false

  serviceType: ClusterIP
  servicePort: 8080
  targetPort: 8080

  ingress:
    enabled: false

  # ENV vars desde Secrets
  envFrom:
    - secretRef:
        name: dockerhub-credentials
    - secretRef:
        name: github-ci-token

  podSecurityContext:
    fsGroup: 1000

  containerSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]

  initContainerEnv:
    - name: JENKINS_UC_DOWNLOAD
      value: https://updates.jenkins.io

  JCasC:
    enabled: true
    configScripts:
      01-security.yaml: |
        jenkins:
          securityRealm:
            local:
              allowsSignup: false
              users:
                - id: "${JENKINS_AUTH_USER_UI}"
                  password: "${JENKINS_AUTH_PASS_UI}"
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false

      02-credentials.yaml: |
        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      id: dockerhub-credentials
                      username: "${DOCKERHUB_USERNAME}"
                      password: "${DOCKERHUB_TOKEN}"
                      description: DockerHub token for CI/CD
                  - usernamePassword:
                      id: github-ci-token
                      username: dummy
                      password: "${GITHUB_TOKEN}"
                      description: GitHub token for CI/CD jobs

      03-kubernetes-cloud.yaml: |
        jenkins:
          clouds:
            - kubernetes:
                name: kubernetes
                serverUrl: https://kubernetes.default
                skipTlsVerify: true
                namespace: jenkins
                jenkinsUrl: "http://{{ .Release.Name }}:8080"
                jenkinsTunnel: "{{ .Release.Name }}-agent:50000"
                templates:
                  - name: default
                    label: default
                    idleMinutes: 1
                    containers:
                      - name: nodejs
                        image: node:18-alpine
                        command: cat
                        ttyEnabled: true
                      - name: kaniko
                        image: gcr.io/kaniko-project/executor:v1.23.0-debug
                        command: /busybox/cat
                        ttyEnabled: true
                        envVars:
                          - envVar:
                              key: DOCKER_CONFIG
                              value: /kaniko/.docker
                    volumes:
                      - secretVolume:
                          secretName: dockerhub-config
                          mountPath: /kaniko/.docker

  installPlugins:
    - kubernetes
    - workflow-aggregator
    - git
    - docker-workflow
    - blueocean
    - configuration-as-code
    - credentials-binding
    - ssh-credentials
    - credentials
    - plain-credentials
    - github-oauth
    - role-strategy

  overwritePlugins: true

  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: "2"
      memory: 4Gi

persistence:
  enabled: true
  storageClass: "{{ jenkins_storage_class }}"
  size: 8Gi
  annotations:
    longhorn.io/replica-count: "1"