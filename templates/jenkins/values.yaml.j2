###############################################################################
# templates/jenkins/values.yaml.j2
# Jenkins Helm values - Producci√≥n sobre K3s/K8s con conexi√≥n a Internet
###############################################################################

controller:
  image:
    repository: jenkins/jenkins
    tag: "2.518-jdk21"
    pullPolicy: IfNotPresent

  installWizard: false
  overwritePlugins: false

  ###########################################################################
  # 1) Plugins a instalar con el initContainer ¬´jenkins-plugin-cli¬ª
  ###########################################################################
  installPlugins:
    # ‚Äî Core / Pipelines ‚Äî
    - kubernetes
    - workflow-aggregator
    - git
    - job-dsl

    # ‚Äî Seguridad & Autenticaci√≥n ‚Äî
    - matrix-auth
    - credentials
    - plain-credentials
    - credentials-binding

    # ‚Äî GitHub ‚Äî
    - github
    - github-branch-source

    # ‚Äî Docker & helpers ‚Äî
    - docker-workflow

    # ‚Äî Blue Ocean UI ‚Äî
    - blueocean

    # ‚Äî Configuration-as-Code & SSE ‚Äî
    - configuration-as-code
    - sse-gateway
    - pipeline-stage-view

  ###########################################################################
  # 2) InitContainers y Sidecars
  ###########################################################################
  sidecars:
    initContainer:
      enabled: true
    configAutoReload:
      enabled: true

  ###########################################################################
  # 3) Credenciales de administrador desde un Secret externo
  ###########################################################################
  admin:
    existingSecret: jenkins-admin
    userKey: jenkins-admin-user
    passwordKey: jenkins-admin-password

  ###########################################################################
  # 4) Variables desde Secret para agentes
  ###########################################################################
  env: []

  envFrom:
    - secretRef:
        name: dockerhub-credentials

  ###########################################################################
  # 5) Jenkins Configuration - as - Code (JCasC)
  ###########################################################################
  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      main: |
        jenkins:
          systemMessage: "üöÄ Jenkins en producci√≥n"
          securityRealm:
            local:
              allowsSignup: false
              # Admin se crea autom√°ticamente desde el Secret jenkins-admin
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false
          clouds:
            - kubernetes:
                name: kubernetes
                serverUrl: https://kubernetes.default
                skipTlsVerify: true
                namespace: jenkins
{% raw %}
                jenkinsUrl: "http://{{ .Release.Name }}:8080"
                jenkinsTunnel: "{{ .Release.Name }}-agent:50000"
{% endraw %}
                templates:
                  - name: default
                    label: default
                    containers:
                      - name: nodejs
                        image: node:18-alpine
                        command: cat
                        ttyEnabled: true
                      - name: kaniko
                        image: gcr.io/kaniko-project/executor:v1.23.0-debug
                        command: /busybox/cat
                        ttyEnabled: true
                        envVars:
                          - envVar:
                              key: DOCKER_CONFIG
                              value: /kaniko/.docker
                    volumes:
                      - secretVolume:
                          secretName: dockerhub-config
                          mountPath: /kaniko/.docker
        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      id: dockerhub-credentials
                      description: "üîê DockerHub CI/CD"
                      username: "${DOCKERHUB_USERNAME}"
                      password: "${DOCKERHUB_TOKEN}"
                  - string:
                      id: github-ci-token
                      description: "üîê GitHub Token CI"
                      secret: "${GITHUB_TOKEN}"

  ###########################################################################
  # 6) Recursos del contenedor principal
  ###########################################################################
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: "2"
      memory: 4Gi

###############################################################################
# 7) Persistencia: Longhorn (u otro StorageClass compatible)
###############################################################################

persistence:
  enabled: true
  storageClass: "{{ jenkins_storage_class }}"
  size: 8Gi
  annotations:
    longhorn.io/replica-count: "1"