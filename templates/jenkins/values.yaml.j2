###############################################################################
# Jenkins  Helm values (producciÃ³n con conexiÃ³n a Internet)
###############################################################################

controller:
  image:
    repository: jenkins/jenkins
    tag: "2.518-jdk21"
    pullPolicy: IfNotPresent

  installWizard: false
  overwritePlugins: true     # Fuerza las versiones listadas

  ###########################################################################
  # 1) Plugins descargados por el initContainer en el primer arranque
  ###########################################################################
  installPlugins:
    # â€”Â Core / Pipeline â€”
    - kubernetes:4260.v1dd44f5b_1cf9
    - workflow-aggregator:596.v8c21c963d92d      # agrupa todos los PipelineÂ *
    - git:5.2.1
    - job-dsl:1.81

    # â€” Security & Auth â€”
    - matrix-auth:3.2
    - credentials:1311.vcf0a_900b_37c2
    - plain-credentials:143.v1b_df8b_d3b_e48
    - credentials-binding:636.v1fff0243f3c4

    # â€” GitHub â€”
    - github:1.37.3
    - github-branch-source:1706.v0f7fa_0b_eb_9d7

    # â€” Docker & CI helpers â€”
    - docker-workflow:572.v950f58993843

    # â€” Blue Ocean UI â€”
    - blueocean:1.27.11

    # â€” Configuration - as - Code â€”
    - configuration-as-code:1775.v810dc950b_514

    # â€” VisualizaciÃ³n de stages â€”
    - pipeline-stage-view:2.33

  sidecars:
    initContainer:
      enabled: true            # Descarga plugins desde Internet
    configAutoReload:
      enabled: true            # Recarga CasC al detectar cambios

  ###########################################################################
  # 2) Credenciales de administrador UI (definidas por Secret externo)
  ###########################################################################
  admin:
    existingSecret: jenkins-admin
    userKey: jenkins-admin-user
    passwordKey: jenkins-admin-password   # Valor #jbcrypt:â€¦

  env: []   # Evita sobreescrituras accidentales

  ###########################################################################
  # 3) Tokens externos disponibles dentro de los pipelines
  ###########################################################################
  containerEnv:
    - { name: DOCKERHUB_USERNAME , value: "${DOCKERHUB_USERNAME}" }
    - { name: DOCKERHUB_TOKEN    , value: "${DOCKERHUB_TOKEN}"    }
    - { name: GITHUB_TOKEN       , value: "${GITHUB_TOKEN}"       }

  ###########################################################################
  # 4) Jenkins Configurationâ€‘asâ€‘Code (JCasC)
  ###########################################################################
  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      main: |
        jenkins:
          systemMessage: "ðŸš€ Jenkins en producciÃ³n"
          securityRealm:
            local:
              allowsSignup: false
              users:
                - id: "${JENKINS_ADMIN_ID}"
                  password: "${JENKINS_ADMIN_PASSWORD}"
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false
          clouds:
            - kubernetes:
                name: kubernetes
                serverUrl: https://kubernetes.default
                skipTlsVerify: true
                namespace: jenkins
{% raw %}
                jenkinsUrl: "http://{{ .Release.Name }}:8080"
                jenkinsTunnel: "{{ .Release.Name }}-agent:50000"
{% endraw %}
                templates:
                  - name: default
                    label: default
                    containers:
                      - name: nodejs
                        image: node:18-alpine
                        command: cat
                        ttyEnabled: true
                      - name: kaniko
                        image: gcr.io/kaniko-project/executor:v1.23.0-debug
                        command: /busybox/cat
                        ttyEnabled: true
                        envVars:
                          - envVar: { key: DOCKER_CONFIG, value: /kaniko/.docker }
                    volumes:
                      - secretVolume:
                          secretName: dockerhub-config
                          mountPath: /kaniko/.docker
        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      id: dockerhub-credentials
                      username: "${DOCKERHUB_USERNAME}"
                      password: "${DOCKERHUB_TOKEN}"
                  - string:
                      id: github-ci-token
                      secret: "${GITHUB_TOKEN}"

  ###########################################################################
  # 5) Recursos del contenedor principal
  ###########################################################################
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: "2"
      memory: 4Gi

#############################################################################
# 6) Persistencia (PVC)
#############################################################################
persistence:
  enabled: true
  storageClass: "{{ jenkins_storage_class }}"
  size: 8Gi
  annotations:
    longhorn.io/replica-count: "1"