# templates\jenkins\values.yaml.j2
controller:
  serviceType: ClusterIP
  servicePort: 8080
  targetPort: 8080
  jenkinsOpts: ""

  ingress:
    enabled: true
    ingressClassName: traefik
    hostName: "{{ jenkins_dashboard_domain }}"
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/auth-type: basic
      traefik.ingress.kubernetes.io/auth-secret: jenkins-auth-secret
    paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jenkins
            port:
              number: 8080

  healthProbes:
    livenessProbe:
      httpGet:
        path: /login
        port: 8080
      initialDelaySeconds: 60
      periodSeconds: 10
      failureThreshold: 3
    readinessProbe:
      httpGet:
        path: /login
        port: 8080
      initialDelaySeconds: 60
      periodSeconds: 10
      failureThreshold: 3
    startupProbe:
      httpGet:
        path: /login
        port: 8080
      initialDelaySeconds: 60
      periodSeconds: 10
      failureThreshold: 30

  JCasC:
    enabled: true
    configScripts:
      security: |
        jenkins:
          securityRealm:
            local:
              allowsSignup: false
              users:
                - id: {{ jenkins_auth_user_ui }}
                  password: {{ jenkins_auth_pass_ui }}
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false

  installPlugins:
    # Plugins m칤nimos necesarios para la configuraci칩n anterior
    - configuration-as-code      # JCasC core
    - credentials                # Manejo de credenciales
    - git                        # SCM m치s com칰n
    - matrix-auth                # Control de roles/ACL
    - workflow-aggregator        # Pipeline b치sico
    # 游녤 Solo a침ade 'kubernetes' si planeas usar Cloud agents en K8s