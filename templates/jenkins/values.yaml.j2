# ----------------------------------------------------------------------------- #
#  templates/jenkins/values.yaml.j2                                             #
# ----------------------------------------------------------------------------- #

# Jenkins - Helm values (producci√≥n con Internet)
controller:
  image:
    repository: jenkins/jenkins
    tag: "2.518-jdk21"
    pullPolicy: IfNotPresent

  installWizard: false
  overwritePlugins: true

  # 1) Plugins que se instalar√°n en el primer arranque
  installPlugins:
    - kubernetes:4260.v1dd44f5b_1cf9
    - workflow-aggregator
    - git
    - configuration-as-code
    - credentials
    - plain-credentials
    - docker-workflow
    - blueocean
    - credentials-binding
    - pipeline-stage-view
    - github
    - github-branch-source
    - job-dsl
    - matrix-auth

  sidecars:
    initContainer:
      enabled: true
    configAutoReload:
      enabled: true

  # 2) Credenciales del administrador UI (Traefik, JCasC, etc.)
  admin:
    existingSecret: jenkins-admin
    userKey: jenkins-admin-user
    passwordKey: jenkins-admin-password

  env:
    JENKINS_ADMIN_USER: "${JENKINS_AUTH_USER_UI}"
    JENKINS_ADMIN_PASSWORD_HASH: "${JENKINS_AUTH_PASS_UI}"

  # 3) Env√≠o de secretos externos para pipelines
  containerEnv:
    - name: DOCKERHUB_USERNAME
      value: "${DOCKERHUB_USERNAME}"
    - name: DOCKERHUB_TOKEN
      value: "${DOCKERHUB_TOKEN}"
    - name: GITHUB_TOKEN
      value: "${GITHUB_TOKEN}"

  # 4) JCasC (Jenkin Configuration as Code)
  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      main: |
        jenkins:
          systemMessage: "üöÄ Jenkins en producci√≥n con Internet"
          securityRealm:
            local:
              allowsSignup: false
              users:
                - id: "${JENKINS_AUTH_USER_UI}"
                  password: "${JENKINS_AUTH_PASS_UI}"
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false
          clouds:
            - kubernetes:
                name: kubernetes
                serverUrl: https://kubernetes.default
                skipTlsVerify: true
                namespace: jenkins
                jenkinsUrl: "http://{{ .Release.Name }}:8080"
                jenkinsTunnel: "{{ .Release.Name }}-agent:50000"
                templates:
                  - name: default
                    label: default
                    idleMinutes: 1
                    containers:
                      - name: nodejs
                        image: node:18-alpine
                        command: cat
                        ttyEnabled: true
                      - name: kaniko
                        image: gcr.io/kaniko-project/executor:v1.23.0-debug
                        command: /busybox/cat
                        ttyEnabled: true
                        envVars:
                          - envVar: { key: DOCKER_CONFIG, value: "/kaniko/.docker" }
                    volumes:
                      - secretVolume: { secretName: dockerhub-config, mountPath: /kaniko/.docker }
        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      id: dockerhub-credentials
                      username: "${DOCKERHUB_USERNAME}"
                      password: "${DOCKERHUB_TOKEN}"
                  - string:
                      id: github-ci-token
                      secret: "${GITHUB_TOKEN}"

  resources:
    requests: { cpu: 200m, memory: 512Mi }
    limits:   { cpu: "2", memory: 4Gi }

persistence:
  enabled: true
  storageClass: "{{ jenkins_storage_class }}"
  size: 8Gi
  annotations:
    longhorn.io/replica-count: "1"