# templates\jenkins\values.yaml.j2
###############################################################################
# Jenkins Helm values - Producci√≥n (K8s/K3s)                                  #
# ‚Ä¢ PVC Longhorn                                                              #
# ‚Ä¢ Jenkins CasC                                                              #
# ‚Ä¢ Secrets externos para DockerHub y GitHub                                  #
###############################################################################

controller:
  image:
    repository: jenkins/jenkins
    tag: "2.518-jdk21"          # LTS vigente (jul-2025)
    pullPolicy: IfNotPresent

  installWizard: false          # Desactiva el first-run wizard
  overwritePlugins: false       # El chart gestiona las dependencias de plugins

  ###########################################################################
  # 1) Plugins a instalar autom√°ticamente
  ###########################################################################
  installPlugins:
    - kubernetes
    - workflow-aggregator
    - git
    - job-dsl
    - matrix-auth
    - credentials
    - plain-credentials
    - credentials-binding
    - github
    - github-branch-source
    - docker-workflow
    - blueocean
    - configuration-as-code
    - sse-gateway
    - pipeline-stage-view

  ###########################################################################
  # 2) InitContainers / Sidecars
  ###########################################################################
  sidecars:
    initContainer:
      enabled: true
    configAutoReload:
      enabled: true

  ###########################################################################
  # 3) Credenciales de administrador (Secret externo)
  ###########################################################################
  admin:
    existingSecret: jenkins-admin
    userKey: jenkins-admin-user
    passwordKey: jenkins-admin-password

  ###########################################################################
  # 4) Variables de entorno ‚Üí montadas desde Secrets
  ###########################################################################
  env: []
  envFrom:
    - secretRef:
        name: dockerhub-credentials
    - secretRef:
        name: github-ci-token

  ###########################################################################
  # 5) Jenkins Configuration as Code (JCasC)
  ###########################################################################
  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      main: |
        jenkins:
          systemMessage: "üöÄ Jenkins en producci√≥n"
          securityRealm:
            local:
              allowsSignup: false
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false

          clouds:
            - kubernetes:
                name: kubernetes
                serverUrl: https://kubernetes.default
                skipTlsVerify: true
                namespace: jenkins
                jenkinsUrl: "http://{{ '{{ .Release.Name }}' }}:8080"
                jenkinsTunnel: "{{ '{{ .Release.Name }}' }}-agent:50000"
                templates:
                  - name: default
                    label: default
                    containers:
                      - name: nodejs
                        image: node:18-alpine
                        command: cat
                        ttyEnabled: true
                      - name: kaniko
                        image: gcr.io/kaniko-project/executor:v1.23.0-debug
                        command: /busybox/cat
                        ttyEnabled: true
                        envVars:
                          - envVar:
                              key: DOCKER_CONFIG
                              value: /kaniko/.docker
                    volumes:
                      - secretVolume:
                          secretName: dockerhub-config
                          mountPath: /kaniko/.docker

        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      id: dockerhub-credentials
                      description: "üîê DockerHub CI/CD"
                      username: "${DOCKERHUB_USERNAME}"
                      password: "${DOCKERHUB_TOKEN}"
                  - string:
                      id: github-ci-token
                      description: "üîê GitHub Token CI"
                      secret: "${GITHUB_TOKEN}"

  ###########################################################################
  # 6) Recursos
  ###########################################################################
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: "2"
      memory: 4Gi

###############################################################################
# 7) Persistencia (Longhorn u otro StorageClass)
###############################################################################
persistence:
  enabled: true
  storageClass: "{{ '{{ jenkins_storage_class }}' }}"
  size: 8Gi
  annotations:
    "longhorn\.io/replica-count": "1"