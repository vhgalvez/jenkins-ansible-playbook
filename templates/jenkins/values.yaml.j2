# --------------------------------------------------------------------------- #
# templates/jenkins/values.yaml.j2                                            #
# Jenkins - Helm values (producci√≥n con Internet)                             #
# --------------------------------------------------------------------------- #

controller:
  image:
    repository: jenkins/jenkins
    tag: "2.518-jdk21"
    pullPolicy: IfNotPresent

  installWizard: false
  overwritePlugins: true         # fuerza las versiones listadas abajo

  ###########################################################################
  # 1) Plugins que el init‚Äëcontainer descargar√° en el primer arranque
  ###########################################################################
  installPlugins:
    - kubernetes:4260.v1dd44f5b_1cf9
    - workflow-aggregator
    - git
    - configuration-as-code
    - credentials
    - plain-credentials
    - docker-workflow
    - blueocean
    - credentials-binding
    - pipeline-stage-view
    - github
    - github-branch-source
    - job-dsl
    - matrix-auth

  sidecars:
    initContainer:
      enabled: true              # descarga plugins desde Internet
    configAutoReload:
      enabled: true              # recarga CasC al detectar cambios

  ###########################################################################
  # 2) Credenciales de administrador UI  (proporcionadas por el Secret)
  ###########################################################################
  admin:
    existingSecret: jenkins-admin         # ‚Üê lo crea tu playbook 01_generate-admin-secret.yml
    userKey: jenkins-admin-user
    passwordKey: jenkins-admin-password   # valor en formato #jbcrypt:‚Ä¶

  # El chart ya expone JENKINS_ADMIN_ID / JENKINS_ADMIN_PASSWORD ‚Üí no
  # necesitamos variables extra aqu√≠; dejamos env vac√≠o para evitar confusi√≥n
  env: []

  ###########################################################################
  # 3) Tokens externos disponibles en los pipelines
  ###########################################################################
  containerEnv:
    - { name: DOCKERHUB_USERNAME , value: "${DOCKERHUB_USERNAME}" }
    - { name: DOCKERHUB_TOKEN    , value: "${DOCKERHUB_TOKEN}"    }
    - { name: GITHUB_TOKEN       , value: "${GITHUB_TOKEN}"       }

  ###########################################################################
  # 4) Jenkins Configuration‚Äëas‚ÄëCode (JCasC)
  ###########################################################################
  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      main: |
        jenkins:
          systemMessage: "üöÄ Jenkins en producci√≥n"
          securityRealm:
            local:
              allowsSignup: false
              users:
                - id: "${JENKINS_ADMIN_ID}"
                  password: "${JENKINS_ADMIN_PASSWORD}"
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false

          # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Kubernetes cloud para agentes en pods ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
          clouds:
            - kubernetes:
                name: kubernetes
                serverUrl: https://kubernetes.default
                skipTlsVerify: true
                namespace: jenkins
{%- raw %}
                jenkinsUrl: "http://{{ .Release.Name }}:8080"
                jenkinsTunnel: "{{ .Release.Name }}-agent:50000"
{%- endraw %}
                templates:
                  - name: default
                    label: default
                    containers:
                      - { name: nodejs , image: node:18-alpine , command: cat , ttyEnabled: true }
                      - name: kaniko
                        image: gcr.io/kaniko-project/executor:v1.23.0-debug
                        command: /busybox/cat
                        ttyEnabled: true
                        envVars:
                          - envVar: { key: DOCKER_CONFIG , value: /kaniko/.docker }
                    volumes:
                      - secretVolume:
                          secretName: dockerhub-config
                          mountPath: /kaniko/.docker

        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      id: dockerhub-credentials
                      username: "${DOCKERHUB_USERNAME}"
                      password: "${DOCKERHUB_TOKEN}"
                  - string:
                      id: github-ci-token
                      secret: "${GITHUB_TOKEN}"

  ###########################################################################
  # 5) Recursos
  ###########################################################################
  resources:
    requests: { cpu: 200m , memory: 512Mi }
    limits:   { cpu: "2"  , memory: 4Gi }

###########################################################################
# 6) Persistencia
###########################################################################
persistence:
  enabled: true
  storageClass: "{{ jenkins_storage_class }}"
  size: 8Gi
  annotations:
    longhorn.io/replica-count: "1"