# templates\jenkins\values.yaml.j2
###############################################################################
# Jenkins  Helm values (producci√≥n con conexi√≥n a Internet)
# Chart oficial (‚â• 5.x) ‚úî  PVC Longhorn ‚úî  CasC ‚úî  Tokens externos ‚úî
###############################################################################

controller:
  image:
    repository: jenkins/jenkins
    tag: "2.518-jdk21"         # √öltima LTS a 2025‚Äë07
    pullPolicy: IfNotPresent

  installWizard: false
  overwritePlugins: false      # el chart ya gestiona las dependencias

  ###########################################################################
  # 1) Plugins que instalar√° el initContainer ¬´jenkins-plugin-cli¬ª
  ###########################################################################
  installPlugins:
    # ‚Äî Core / Pipelines ‚Äî
    - kubernetes
    - workflow-aggregator
    - git
    - job-dsl

    # ‚Äî Security & Auth ‚Äî
    - matrix-auth
    - credentials
    - plain-credentials
    - credentials-binding

    # ‚Äî GitHub ‚Äî
    - github                  # ‚Üê CORREGIDO (antes ¬´gthub¬ª  ‚ñ∂  404)
    - github-branch-source

    # ‚Äî Docker & helpers ‚Äî
    - docker-workflow

    # ‚Äî Blue Ocean UI ‚Äî
    - blueocean

    # ‚Äî Configuration as Code / visual ‚Äî
    - configuration-as-code
    - pipeline-stage-view

  ###########################################################################
  # 2) Init & Sidecars
  ###########################################################################
  sidecars:
    initContainer:
      enabled: true            # usa la imagen oficial jenkins-plugin-cli
    configAutoReload:
      enabled: true

  ###########################################################################
  # 3) Credenciales admin (Secret externo)
  ###########################################################################
  admin:
    existingSecret: jenkins-admin
    userKey:      jenkins-admin-user
    passwordKey:  jenkins-admin-password   # hash #jbcrypt:...

  env: []                       # evitamos sobre‚Äëescrituras accidentales

  ###########################################################################
  # 4) Tokens externos para los pipelines
  ###########################################################################
  containerEnv:
    - { name: DOCKERHUB_USERNAME, value: "${DOCKERHUB_USERNAME}" }
    - { name: DOCKERHUB_TOKEN   , value: "${DOCKERHUB_TOKEN}"    }
    - { name: GITHUB_TOKEN      , value: "${GITHUB_TOKEN}"       }

  ###########################################################################
  # 5) Jenkins Configuration - as - Code (JCasC)
  ###########################################################################
  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      main: |
        jenkins:
          systemMessage: "üöÄ Jenkins en producci√≥n"
          securityRealm:
            local:
              allowsSignup: false
              users:
                - id: "${JENKINS_ADMIN_ID}"
                  password: "${JENKINS_ADMIN_PASSWORD}"
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false
          clouds:
            - kubernetes:
                name: kubernetes
                serverUrl: https://kubernetes.default
                skipTlsVerify: true
                namespace: jenkins
{% raw %}
                jenkinsUrl: "http://{{ .Release.Name }}:8080"
                jenkinsTunnel: "{{ .Release.Name }}-agent:50000"
{% endraw %}
                templates:
                  - name: default
                    label: default
                    containers:
                      - { name: nodejs, image: node:18-alpine, command: cat, ttyEnabled: true }
                      - name: kaniko
                        image: gcr.io/kaniko-project/executor:v1.23.0-debug
                        command: /busybox/cat
                        ttyEnabled: true
                        envVars:
                          - { envVar: { key: DOCKER_CONFIG, value: /kaniko/.docker } }
                    volumes:
                      - secretVolume:
                          secretName: dockerhub-config
                          mountPath: /kaniko/.docker
        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      id: dockerhub-credentials
                      description: "üîê DockerHub CI/CD"
                      username: "${DOCKERHUB_USERNAME}"
                      password: "${DOCKERHUB_TOKEN}"
                  - string:
                      id: github-ci-token
                      description: "üîê GitHub Token CI"
                      secret: "${GITHUB_TOKEN}"

  ###########################################################################
  # 6) Recursos del contenedor principal
  ###########################################################################
  resources:
    requests: { cpu: 200m, memory: 512Mi }
    limits:   { cpu: "2", memory: 4Gi }

###############################################################################
# Persistencia Longhorn
###############################################################################
persistence:
  enabled: true
  storageClass: "{{ jenkins_storage_class }}"
  size: 8Gi
  annotations:
    longhorn.io/replica-count: "1"