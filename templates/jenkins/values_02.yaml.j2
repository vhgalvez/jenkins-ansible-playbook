###############################################################################
# Jenkins – Producción (30‑Jul‑2025 rev‑4)
###############################################################################

controller:
  image:
    repository: jenkins/jenkins
    tag: "2.518-jdk21"
    pullPolicy: IfNotPresent

  installWizard: false
  overwritePlugins: false

  # ─────────────────────────── 1) Plugins ────────────────────────────
  installPlugins:
    # core
    - kubernetes
    - workflow-aggregator
    - git
    - job-dsl
    - matrix-auth
    - blueocean
    # credentials
    - credentials
    - plain-credentials
    - credentials-binding
    # sources + docker
    - github
    - github-branch-source
    - docker-workflow
    # ui / cas‑code
    - configuration-as-code
    - pipeline-stage-view
    - sse-gateway          # ← reinstalado (dep. de stage‑view)

  # ─────────────────────────── 2) Sidecars ───────────────────────────
  sidecars:
    initContainer:    { enabled: true }
    configAutoReload: { enabled: true }

  initContainerEnv:
    - { name: JENKINS_UC,                       value: https://updates.jenkins.io }
    - { name: JENKINS_UC_DOWNLOAD,              value: https://updates.jenkins.io/download }
    - { name: JENKINS_UC_EXPERIMENTAL,          value: https://updates.jenkins.io/experimental }
    - { name: JENKINS_INCREMENTALS_REPO_MIRROR, value: https://repo.jenkins-ci.org/incrementals }

  # ───────────────────── 3) Credencial de administrador ──────────────
  admin:
    existingSecret: jenkins-admin
    userKey:        jenkins-admin-user
    passwordKey:    jenkins-admin-password

  # ───────────────────────── 4) Variables externas ───────────────────
  env: []
  envFrom:
    - secretRef: { name: dockerhub-credentials }
    - secretRef: { name: github-ci-token }

  containerEnv:
    - name: JENKINS_UI_USER
      valueFrom: { secretKeyRef: { name: jenkins-admin, key: jenkins-admin-user } }
    - name: JENKINS_UI_PASS
      valueFrom: { secretKeyRef: { name: jenkins-admin, key: jenkins-admin-password } }

  # ───────────────────────── 5) Startup Probe ────────────────────────
  startupProbe:
    enabled: true
    failureThreshold: 30
    periodSeconds: 10

  # ─────────────────────────── 6) JCasC ──────────────────────────────
  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      00-security-and-clouds: |
        jenkins:
          systemMessage: "🚀 Jenkins en producción"
          securityRealm:
            local:
              allowsSignup: false
              enableCaptcha: false
              users:
                - id: "${JENKINS_UI_USER}"
                  password: "${JENKINS_UI_PASS}"
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false

          clouds:
            - kubernetes:
                name: kubernetes
                serverUrl: https://kubernetes.default
                skipTlsVerify: true
                namespace: jenkins
{% raw %}
                jenkinsUrl: "http://{{ .Release.Name }}:8080"
                jenkinsTunnel: "{{ .Release.Name }}-agent:50000"
{% endraw %}
                templates:
                  # —— default —— #
                  - name: default
                    label: default
                    containers:
                      - name: busybox
                        image: busybox:1.36
                        command: "cat"

                  # —— gitops + kaniko —— #
                  - name: gitops-agent
                    label: gitops-agent
                    containers:
                      - name: nodejs
                        image: node:18-alpine
                        command: "cat"

                      - name: kaniko
                        image: gcr.io/kaniko-project/executor:v1.23.0-debug
                        command: "/busybox/cat"
                        envVars:
                          - envVar:             # ← formato correcto
                              key: DOCKER_CONFIG
                              value: /kaniko/.docker
                    volumes:
                      - secretVolume:
                          secretName: dockerhub-config
                          mountPath: /kaniko/.docker

        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      scope: GLOBAL
                      id: dockerhub-credentials
                      description: "DockerHub CI/CD"
                      username: "${DOCKERHUB_USERNAME}"
                      password: "${DOCKERHUB_TOKEN}"
                  - string:
                      scope: GLOBAL
                      id: github-ci-token
                      description: "GitHub Token CI"
                      secret: "${GITHUB_TOKEN}"

  # ────────────────────────── 7) Recursos ────────────────────────────
  resources:
    requests: { cpu: 500m, memory: 512Mi }
    limits:   { cpu: "2",  memory: 4Gi }

###############################################################################
# 8) Persistencia
###############################################################################
persistence:
  enabled: true
  storageClass: "{{ jenkins_storage_class }}"
  size: 8Gi
  annotations: { "longhorn.io/replica-count": "1" }